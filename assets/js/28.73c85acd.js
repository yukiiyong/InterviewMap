(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{370:function(e,l,v){"use strict";v.r(l);var _=v(42),a=Object(_.a)({},(function(){var e=this,l=e.$createElement,v=e._self._c||l;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h4",{attrs:{id:"webpack优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webpack优化"}},[e._v("#")]),e._v(" webpack优化")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("treeshaking 去除无效代码")])]),e._v(" "),v("li",[v("p",[e._v("压缩")])]),e._v(" "),v("li",[v("p",[e._v("cdn")])]),e._v(" "),v("li",[v("p",[e._v("动态引入polyfill")])]),e._v(" "),v("li",[v("p",[e._v("提取公共代码库 （split chunk plugin） dll？ commonChunksPlugin？")])]),e._v(" "),v("li",[v("p",[e._v("preloading 和 prefetch （父加载时加载和空闲时加载）")])]),e._v(" "),v("li",[v("p",[e._v("持久化缓存（保证hash唯一性，内容不一致则hash不一样）")])]),e._v(" "),v("li",[v("p",[e._v("sourcemap（devtool合理使用）")])]),e._v(" "),v("li",[v("p",[e._v("打包分析工具（webpack-bundle-analyzer）")])]),e._v(" "),v("li",[v("p",[e._v("合理使用缓存来减少打包时间（针对公用不改库）"),v("br"),e._v("\n10.1 loader后 "),v("code",[e._v("?cacheDirectory")]),e._v(" 若文件没有改动则缓存"),v("br"),e._v(" "),v("code",[e._v("use:[{loader: 'babel-loader?cacheDirectory'}]")]),v("br"),e._v("\n10.2 cache-loader加在开销比较大的loader前进行缓存")])]),e._v(" "),v("li",[v("p",[e._v("合理使用plugin，减少打包体积和时间")])]),e._v(" "),v("li",[v("p",[e._v("不需要整个库打包进来时可以使用 IgnorePlugin来忽略插件中的无用文件夹")])]),e._v(" "),v("li",[v("p",[e._v("压缩CSS optimizeCssAssetsPlugin 只需要在生产环境压缩，开发环境不压缩")])]),e._v(" "),v("li",[v("p",[e._v("合理配置resolve ，防止减慢时间"),v("br"),e._v("\n合理配置resolve.extensions中后缀的个数")])]),e._v(" "),v("li",[v("p",[e._v("启用多进程打包")])])]),e._v(" "),v("ul",[v("li",[e._v("happypack(id)，thread-loader（加在loader前使用，之后loader会在单独的worker池运行，支持自定义配置，方便性能优化）")]),e._v(" "),v("li",[e._v("parallelUglifyPlugin 多进程压缩js")]),e._v(" "),v("li",[e._v("压缩js首先将代码解析成AST语法树，然后根据复杂的规则去分析和处理ast ，最后将ast还原成js")])]),e._v(" "),v("ol",{attrs:{start:"14"}},[v("li",[e._v("开发中使用模块热替换自动更新"),v("br"),e._v(" "),v("code",[e._v("HotModuleReplacementPlugin.")]),e._v(" "),v("code",[e._v("devServer.hot:true")])]),e._v(" "),v("li",[e._v("使用dllPlugin插件，优化提高打包时间")]),e._v(" "),v("li",[e._v("懒加载。小图base64")])]),e._v(" "),v("h4",{attrs:{id:"webpack-plugin-优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#webpack-plugin-优化"}},[e._v("#")]),e._v(" webpack plugin 优化")]),e._v(" "),v("ul",[v("li",[e._v("webpack-dashboard    更友好展示打包信息。")]),e._v(" "),v("li",[e._v("webpack-merge  提取公共配置，减少重复代码")]),e._v(" "),v("li",[e._v("size-plugin  监控资源体积变化")]),e._v(" "),v("li",[e._v("HotModuleReplacementplugin 模块热更新")]),e._v(" "),v("li",[e._v("speed-measure-webpack-plugin 计算整体和每个部分（包括plugin和loader）的打包时间")])])])}),[],!1,null,null,null);l.default=a.exports}}]);