(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{368:function(t,e,n){"use strict";n.r(e);var l=n(42),r=Object(l.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h4",{attrs:{id:"长列表优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#长列表优化"}},[t._v("#")]),t._v(" 长列表优化")]),t._v(" "),n("ol",[n("li",[t._v("懒加载＋分页 （懒加载即 一次只加载可视区域内的条目，滚动到一定距离加载更多条目，追加到列表数据中")]),t._v(" "),n("li",[t._v("虚拟列表滚动 每次只渲染可视区域内的列表数，当滚动后动态的追加数据并通过顶部padding来撑起整个滚动内容")])]),t._v(" "),n("ul",[n("li",[t._v("定位点poll poll.current.getBoundingClientRect().top <= window.innerHeight 即满足追加条件")])]),t._v(" "),n("h4",{attrs:{id:"虚拟列表-实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#虚拟列表-实现"}},[t._v("#")]),t._v(" 虚拟列表 实现")]),t._v(" "),n("ol",[n("li",[t._v("实现虚拟列表需要计算出可视区域中的列表项以及顶部和底部的留白的高度。同时需要解决滚动时留白部分出现在可视区域内以及页面抖动，通过给上下预留位置可以解决这个问题")]),t._v(" "),n("li",[t._v("startIndex endIndex 可视区域 真实列表")]),t._v(" "),n("li",[t._v("绝对定位元素脱离了文档流，相当于在节点只存了token，通过这个token去映射元素。当元素发生变化时，若采取绝对定位，则只对这一块元素进行重绘。。")])])])}),[],!1,null,null,null);e.default=r.exports}}]);