(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{357:function(t,r,e){"use strict";e.r(r);var s=e(42),a=Object(s.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h4",{attrs:{id:"px-em和rem区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#px-em和rem区别"}},[t._v("#")]),t._v(" px, em和rem区别")]),t._v(" "),e("p",[e("strong",[t._v("px")]),t._v("（绝对长度单位）：在缩放页面时无法调整那些使用它作为单位的字体，按钮的大小。"),e("br"),t._v(" "),e("strong",[t._v("em")]),t._v("(相对长度单位）：继承父级元素大小"),e("br"),t._v("\nrem(相对长度单位): 相对于根元素(html)的大小，不用级联计算，支持IE9以上")]),t._v(" "),e("h4",{attrs:{id:"line-height的理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#line-height的理解"}},[t._v("#")]),t._v(" line-height的理解")]),t._v(" "),e("p",[t._v("① line-height是指一行字的高度，包含了字间距，实际上是下一行基线到上一行基线距离"),e("br"),t._v("\n② 若一个标签没有定义height属性，那么最终表现出来的高度由line-height决定"),e("br"),t._v("\n③ 若一个容器没有设置高度，那么撑开容器高度的是line-height而不是容器内文字内容"),e("br"),t._v("\n④ 把line-height值设置为height一样大小的值可以实现单行文体垂直居中"),e("br"),t._v("\n⑤ height和line-height都会撑开高度，height会触发has-layout，而line-height不会")]),t._v(" "),e("h4",{attrs:{id:"line-height三种赋值方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#line-height三种赋值方式"}},[t._v("#")]),t._v(" line-height三种赋值方式")]),t._v(" "),e("ol",[e("li",[t._v("带单位: px是固定值，而em会参考父元素的font-size计算自身的行高")]),t._v(" "),e("li",[t._v("纯数字: 会作为比例传给后代")]),t._v(" "),e("li",[t._v("百分比: 将计算后的值传给后代")])]),t._v(" "),e("h4",{attrs:{id:"浏览器如何确定哪些元素与css选择器匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器如何确定哪些元素与css选择器匹配"}},[t._v("#")]),t._v(" 浏览器如何确定哪些元素与CSS选择器匹配")]),t._v(" "),e("p",[t._v("浏览器从右边的选择器(关键选择器)开始查找，根据关键选择器，浏览器从DOM中筛选出元素，然后向上遍历被选元素的父元素。看是否匹配")]),t._v(" "),e("h4",{attrs:{id:"基于以上规则，如何高效编写css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基于以上规则，如何高效编写css"}},[t._v("#")]),t._v(" 基于以上规则，如何高效编写CSS")]),t._v(" "),e("p",[t._v("①避免使用标签和通用选择器(*)作为关键选择器，因为它们会匹配大量的元素，浏览器必须要进行大量的工作。去判断这些元素的父元素们是否匹配")]),t._v(" "),e("p",[t._v("②选择器的匹配语句链越短，浏览器的匹配速度越快")]),t._v(" "),e("p",[t._v("搞清楚哪些元素会触发回流，重绘以及合成(composition)，在编\n写样式时避免触发回流")]),t._v(" "),e("h4",{attrs:{id:"link和＠import区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#link和＠import区别"}},[t._v("#")]),t._v(" link和＠import区别")]),t._v(" "),e("p",[t._v("①link功能较多，可以定义Rel和定义RSS等，而@import只能用于加载CSS")]),t._v(" "),e("p",[t._v("②当解析到link时，页面会同步加载所引用的CSS，而@import所引用的CSS只能等页面加载完才被加载")]),t._v(" "),e("p",[t._v("③ link支持的浏览器比较多，＠import支持IE5及以上，所以可以用＠import对老浏览器隐藏样式")]),t._v(" "),e("p",[t._v("④link可以js动态引入，而@import不行")]),t._v(" "),e("p",[t._v("⑤ ＠import必须在样式规则之前，可以在CSS文件中引用其他文件")]),t._v(" "),e("h4",{attrs:{id:"a标签上四个伪类的执行顺序-lvha"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a标签上四个伪类的执行顺序-lvha"}},[t._v("#")]),t._v(" a标签上四个伪类的执行顺序(LVHA)")]),t._v(" "),e("p",[t._v("link>visited>hover>active")]),t._v(" "),e("h4",{attrs:{id:"css属性contetnt的作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css属性contetnt的作用"}},[t._v("#")]),t._v(" css属性contetnt的作用")]),t._v(" "),e("p",[t._v("content属性用于before/ after伪元素上，用于插入额外内容或样式，可以减少标签使用")]),t._v(" "),e("h4",{attrs:{id:"伪元素与伪类区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#伪元素与伪类区别"}},[t._v("#")]),t._v(" 伪元素与伪类区别:")]),t._v(" "),e("p",[e("strong",[t._v("伪元素")]),t._v(":"),e("br"),t._v("\n① 在内容元素的前或后插入额外的内容或样式，但这些元素实际上并不在文档中生成"),e("br"),t._v("\n② 它们(伪元素)在外部显示可见，但不会在文档的源代码中找到它们")]),t._v(" "),e("p",[e("strong",[t._v("伪类")]),t._v("：将特殊的效果添加到特定选择器，它是己有的选择器上添加类别的，不会产生新的元素。")]),t._v(" "),e("h4",{attrs:{id:"before和-after-伪元素-中双冒号和单冒号的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#before和-after-伪元素-中双冒号和单冒号的区别"}},[t._v("#")]),t._v(" :before和:after(伪元素)中双冒号和单冒号的区别.")]),t._v(" "),e("p",[t._v("① 在CSS中伪类一直用（单冒号），用:hover表示"),e("br"),t._v("\n② 伪元素在CSS1中已存在，当时的语法用:表示，如:before"),e("br"),t._v("\n③ 在CSS3中修订，伪元素用:表示，如:before和:after，以此区分伪元素和伪类"),e("br"),t._v("\n④由于低版本IE对双冒号不兼容，开发者为了兼容各浏览器，继续使用 :after这种老语法表示伪元素")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"css优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#css优化"}},[t._v("#")]),t._v(" CSS优化")]),t._v(" "),e("h4",{attrs:{id:"提高性能的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提高性能的方法"}},[t._v("#")]),t._v(" 提高性能的方法")]),t._v(" "),e("p",[t._v("① 多个CSS合并，减少HTTP请求"),e("br"),t._v("\n② 移除空的CSS规则"),e("br"),t._v("\n③ 将CSS文件放在页面最上方"),e("br"),t._v("\n④ 避免使用CSS表达式(造成大量计算，如calc)"),e("br"),t._v("\n⑤ 选择器优化嵌套，尽量避免层级过深"),e("br"),t._v("\n⑥ 充份利用CSS继承属性，减少代码量"),e("br"),t._v("\n⑦ 抽象提取公共样式，减少代码量"),e("br"),t._v("\n⑧ 属性值为于1的小数时，省略小数点前的0"),e("br"),t._v("\n⑨ 属性值为0时不加单位"),e("br"),t._v("\n⑩ CSS雪碧图")]),t._v(" "),e("h4",{attrs:{id:"抽离样式模块-将css拆分成两部份，公共css和业务css"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#抽离样式模块-将css拆分成两部份，公共css和业务css"}},[t._v("#")]),t._v(" 抽离样式模块 (将CSS拆分成两部份，公共CSS和业务CSS)")]),t._v(" "),e("p",[t._v("① 将网站的配色，字体，交互提取为公共CSS，这部份CSS的命名不应涉及具体业务。\n② 对于业务的CSS，统一命名，使用公共的前缀。参考面向对象的CSS")]),t._v(" "),e("h4",{attrs:{id:"响应式设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#响应式设计"}},[t._v("#")]),t._v(" 响应式设计")]),t._v(" "),e("p",[t._v("① 响应式设计是网站可以兼容多个终端，而不是为每个终端做一个特定版本\n② 基本原理是利用CSS3媒体查询，为不同设备适配不同样式\n③ 对于低版本的IE，可以用JS获取屏幕宽度，用resize方法实现兼容\n不同的屏幕宽度添加不同的类(class)")])])}),[],!1,null,null,null);r.default=a.exports}}]);