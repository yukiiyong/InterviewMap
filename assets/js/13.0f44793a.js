(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{356:function(t,v,_){"use strict";_.r(v);var e=_(42),s=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h4",{attrs:{id:"typeof-的原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#typeof-的原理"}},[t._v("#")]),t._v(" typeof 的原理")]),t._v(" "),_("ul",[_("li",[t._v("typeof一般用于判断一个类型，可以判断number，string，boolean，undefined，function，object，symbol 七种类型")]),t._v(" "),_("li",[t._v("js在底层存储变量的时候用"),_("strong",[t._v("机器码的低一至三位")]),t._v("存储其类型信息")]),t._v(" "),_("li",[t._v("但是由于"),_("strong",[t._v("null的机器码全为0")]),t._v("，所以使用typeof检测的时候会"),_("strong",[t._v("认为是对象（object）")]),t._v("。解决办法是用object.prototype.toString.call（）这个方法")])]),t._v(" "),_("h4",{attrs:{id:"内存泄漏"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#内存泄漏"}},[t._v("#")]),t._v(" 内存泄漏")]),t._v(" "),_("p",[t._v("内存泄漏是指由于错误造成程序未能释放已经不再使用的内存，从而使内存占用过高")]),t._v(" "),_("p",[_("strong",[t._v("解决")]),t._v("：可用chrome中的timeline工具进行内存标配，可视化查看内存变化情况，找出异常点")]),t._v(" "),_("p",[_("strong",[t._v("造成原因")])]),t._v(" "),_("ol",[_("li",[t._v("意外的全局变量，浏览器关闭前无法被回收")]),t._v(" "),_("li",[t._v("定时器未被正确关闭，导致所引用的外部变量无法被正确释放")]),t._v(" "),_("li",[t._v("事件监听器 没有被正确销毁（低版本浏览器可能会出现）")]),t._v(" "),_("li",[t._v("闭包 闭包中的变量被全局变量引用，闭包使用完毕后，闭包中的局部变量不能释放")]),t._v(" "),_("li",[t._v("dom引用 dom元素被删除时，内存中的引用未被正确清空")])]),t._v(" "),_("h4",{attrs:{id:"什么是＇use-strict＇-严格模式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是＇use-strict＇-严格模式"}},[t._v("#")]),t._v(" 什么是＇use strict＇(严格模式)")]),t._v(" "),_("ol",[_("li",[t._v("无法意外创建全局变量")]),t._v(" "),_("li",[t._v("会使引起静默失败的赋值操作抛出异常")]),t._v(" "),_("li",[t._v("试图删除不可删除的变量会抛出异常，之前此操作不会产生任何效果")]),t._v(" "),_("li",[t._v("要求函数参数名唯一\n5.全局作用域下，this的值为undefined")]),t._v(" "),_("li",[t._v("捕获一些常见的编码错误，并抛出异常")]),t._v(" "),_("li",[t._v("禁用一些令人困惑或欠佳的功能\n8.无法访问function.caller和function.arguments\nPS: 以不同严格模式编写的脚本合并后会导致问题")])]),t._v(" "),_("h4",{attrs:{id:"箭头函数-es6中代替函数表达式的语法糖"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数-es6中代替函数表达式的语法糖"}},[t._v("#")]),t._v(" 箭头函数: ES6中代替函数表达式的语法糖")]),t._v(" "),_("p",[_("strong",[t._v("特点")]),t._v(":")]),t._v(" "),_("ol",[_("li",[t._v("没有自己的this，需要从外部作用域获取this(声明时外部作用域的this)")]),t._v(" "),_("li",[t._v("不能使用call,apply和bind来绑定this")]),t._v(" "),_("li",[t._v("不能用作构造函数，使用new命令会报错")]),t._v(" "),_("li",[t._v("不能用arguments属性，若要使用则用rest参数代替")]),t._v(" "),_("li",[t._v("不能使用yield命令，即箭头函数不能用作Generator函数")])]),t._v(" "),_("p",[_("strong",[t._v("原生对象")]),t._v(" 由ECMAScript规范定义的JavaScript内置对象")]),t._v(" "),_("p",[_("strong",[t._v("宿主对象")]),t._v(" 运行时环境(浏览器或node)决定的，如XMLHTTPRequest，Windows")])])}),[],!1,null,null,null);v.default=s.exports}}]);